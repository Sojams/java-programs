package javapgm;

import java.util.LinkedList;
import java.util.Queue;

public class StackUsingQueues {

    private Queue<Integer> queue1 = new LinkedList<>();
    private Queue<Integer> queue2 = new LinkedList<>();

    public void push(int x) {
       
        queue1.offer(x);
    }

    public int pop() {
       
        while (queue1.size() > 1) {
            queue2.offer(queue1.poll());
        }

       
        int poppedElement = queue1.poll();

        
        Queue<Integer> temp = queue1;
        queue1 = queue2;
        queue2 = temp;

        return poppedElement;
    }

    public int top() {
       
        while (queue1.size() > 1) {
            queue2.offer(queue1.poll());
        }

        int topElement = queue1.peek();

        
        queue2.offer(queue1.poll());

       
        Queue<Integer> temp = queue1;
        queue1 = queue2;
        queue2 = temp;

        return topElement;
    }

    public static void main(String[] args) {
        StackUsingQueues stack = new StackUsingQueues();

        stack.push(1);
        stack.push(2);
        stack.push(3);

        System.out.println("Top element: " + stack.top()); 
        System.out.println("Pop: " + stack.pop());        
        System.out.println("Pop: " + stack.pop());       
        System.out.println("Top element: " + stack.top()); 
    }
}
